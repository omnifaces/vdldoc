{"name":"Vdldoc","tagline":"Facelets .taglib.xml documentation generator","body":"##What is Vdldoc?\r\n\r\nVdldoc is a forked and rewritten version of old JSP TLDdoc Generator as\r\npreviously available at\r\n[http://taglibrarydoc.dev.java.net](http://taglibrarydoc.dev.java.net)\r\n(which is nowhere available right now). Vdldoc has near-complete support\r\nfor Facelets `*.taglib.xml` files. The generated documentation has Java\r\n8 javadoc look'n'feel.\r\n\r\nAs a preview, you can check the following online examples:\r\n\r\n-   [OmniFaces](http://omnifaces.org) [VDL\r\n    documentation](http://omnifaces.org/docs/vdldoc/current/) (Vdldoc 2.1)\r\n-   [PrimeFaces](http://primefaces.org) [5.2 VDL\r\n    documentation](http://www.primefaces.org/docs/vdl/5.2/core/) (Vdldoc 1.1)\r\n-   [RichFaces](http://richfaces.jboss.org) [4.5.x VDL\r\n    documentation](http://docs.jboss.org/richfaces/latest_4_5_X/vdldoc/) (Vdldoc 1.2)\r\n\r\n## Installation\r\n\r\nJust drop the [Vdldoc 2.1 JAR file](http://central.maven.org/maven2/org/omnifaces/vdldoc/2.1/) file\r\ninto the classpath. If you are using Maven, you can include the following\r\ndependency in your `pom.xml`:\r\n\r\n```XML\r\n<dependency>\r\n    <groupId>org.omnifaces</groupId>\r\n    <artifactId>vdldoc</artifactId>\r\n    <version>2.1</version>\r\n</dependency>\r\n```\r\n\r\n## Download\r\n\r\n- **2.1** (12 Sep 2015) - [library](http://central.maven.org/maven2/org/omnifaces/vdldoc/2.1/vdldoc-2.1.jar) - [sources](http://central.maven.org/maven2/org/omnifaces/vdldoc/2.1/vdldoc-2.1-sources.jar) - [javadoc](http://central.maven.org/maven2/org/omnifaces/vdldoc/2.1/vdldoc-2.1-javadoc.jar)    \r\n    Added option to hide \"Generated by Vdldoc\" footer. Added option to explicitly set CSS location (allowing overriding default CSS). Added support for Facelets 2.2 `<short-name>` tag.\r\n- **2.0** (24 Nov 2014) - [library](http://central.maven.org/maven2/org/omnifaces/vdldoc/2.0/vdldoc-2.0.jar) - [sources](http://central.maven.org/maven2/org/omnifaces/vdldoc/2.0/vdldoc-2.0-sources.jar) - [javadoc](http://central.maven.org/maven2/org/omnifaces/vdldoc/2.0/vdldoc-2.0-javadoc.jar)    \r\n    Changed look'n'feel to Java 8 javadoc and added support for new Java EE 7's `http://xmlns.jcp.org/*` XML namespace in addition to old `http://java.sun.com/*` XML namespace.\r\n- **1.2** (30 Apr 2014) - [library](http://central.maven.org/maven2/org/omnifaces/vdldoc/1.2/vdldoc-1.2.jar) - [sources](http://central.maven.org/maven2/org/omnifaces/vdldoc/1.2/vdldoc-1.2-sources.jar) - [javadoc](http://central.maven.org/maven2/org/omnifaces/vdldoc/1.2/vdldoc-1.2-javadoc.jar)    \r\n    Added support for composite components available by `<composite-library-name>` entry of `.taglib.xml` files.\r\n- **1.1** (10 Sep 2013) - [library](http://central.maven.org/maven2/org/omnifaces/vdldoc/1.1/vdldoc-1.1.jar) - [sources](http://central.maven.org/maven2/org/omnifaces/vdldoc/1.1/vdldoc-1.1-sources.jar) - [javadoc](http://central.maven.org/maven2/org/omnifaces/vdldoc/1.1/vdldoc-1.1-javadoc.jar)    \r\n    Added support for managed beans definied in `<managed-bean>` entries of `faces-config.xml` file.\r\n- **1.0** (9 March 2012) - [library](http://vdldoc.omnifaces.org/downloads/vdldoc-1.0.jar) - [sources](http://vdldoc.omnifaces.org/downloads/vdldoc-1.0-sources.jar)    \r\n    Initial release, just forked TLDdoc and altered for Facelets `.taglib.xml` files with Java 7 javadoc look'n'feel, with support for `<tag>` and `<function>` entries of `.taglib.xml` files.\r\n\r\n## Usage\r\n\r\nMuch like old TLDdoc usage, once the jar is in runtime classpath, run it\r\nas follows:\r\n\r\n```Java\r\nVdldocGenerator generator = new VdldocGenerator();\r\ngenerator.setWindowTitle(\"Browser window title\"); // Else default will be used.\r\ngenerator.setDocTitle(\"Documentation title\"); // Else default will be used.\r\ngenerator.setOutputDirectory(new File(\"/path/to/vdldoc\")); // Else ./vdldoc will be used.\r\ngenerator.setCssLocation(\"/uri/to/style.css\"); // Optional (overrides default CSS).\r\ngenerator.setFacesConfig(new File(\"/path/to/faces-config.xml\")); // Optional.\r\ngenerator.setAttributes(new File(\"/path/to/cc-attributes.properties\")); // Optional.\r\ngenerator.setHideGeneratedBy(true); // Optional.\r\ngenerator.addTaglib(new File(\"/path/to/foo.taglib.xml\"));\r\ngenerator.addTaglib(new File(\"/path/to/bar.taglib.xml\"));\r\n// ...\r\ngenerator.generate();\r\n```\r\n\r\nThe `<facelet-taglib><short-name>` will be used as the taglib prefix. Make sure\r\nthat you have supplied one. E.g.\r\n\r\n```XML\r\n<facelet-taglib>\r\n    <description>OmniFaces UI components.</description>\r\n    <namespace>http://omnifaces.org/ui</namespace>\r\n    <short-name>o</short-name>\r\n    ...\r\n</facelet-taglib>\r\n```\r\n\r\nOr if you are not on Facelets 2.2 yet, you can supply `<facelet-taglib id>` instead. E.g.\r\n\r\n```XML\r\n<facelet-taglib id=\"o\">\r\n    <description>OmniFaces UI components.</description>\r\n    <namespace>http://omnifaces.org/ui</namespace>\r\n    ...\r\n</facelet-taglib>\r\n```\r\n\r\nOtherwise, it will default to the base filename without the `.taglib.xml`\r\nextension.\r\n\r\n**Note:** MyFaces has a [known parsing\r\nissue](https://issues.apache.org/jira/browse/MYFACES-3537) when using\r\n`<description>` in the `<facelet-taglib>` as demonstrated above. This\r\nhas been fixed for MyFaces 2.0.14 and 2.1.8. This problem is completely\r\nunrelated to Vdldoc.\r\n\r\nAs to the `cc-attributes.properties` file (the file name is by the way fully free to your choice, as long as it's a valid Java `.properties` file), this is specifically for implied composite component attributes which are not definied via `<cc:attribute>`. Therein you can define the display name, description, required and type columns of the attributes in the following syntax:\r\n\r\n```INI\r\n# id\r\nid.displayName=id\r\nid.description=The identifier of the component.\r\nid.required=false\r\nid.type=java.lang.String\r\n# rendered\r\nrendered.displayName=rendered\r\nrendered.description=Boolean flag indicating whether or not this component is to be rendered during the RENDER_RESPONSE phase of the JSF lifecycle.  The default value is true.\r\nrendered.required=false\r\nrendered.type=java.lang.Boolean\r\n```\r\n\r\nIf this file is not specified, then the above specified defaults will be used.\r\n\r\n\r\n## CLI\r\n\r\nThe `vdldoc.jar` can be also run in the command line like so: \r\n\r\n```sh\r\njava -jar vdldoc-2.1.jar foo.taglib.xml bar.taglib.xml\r\n``` \r\n\r\nThe files will by default be generated into a new `/vdldoc` folder in\r\nthe working directory. The usage options are laid out below:\r\n\r\n```\r\n------------------------------------------------------------------------------\r\n                        VDL Documentation Generator\r\nUsage:\r\n               vdldoc [options] taglib1 [taglib2 [taglib3 ...]]\r\noptions:\r\n  -help                  Displays this help message.\r\n  -d <directory>         Destination directory for output files.\r\n                         This defaults to new dir called 'vdldoc'.\r\n  -windowtitle <text>    Browser window title. This defaults to\r\n                         VDL Documentation Generator - Generated Documentation\r\n  -doctitle <html-code>  Documentation title for the VDL index page.\r\n                         This defaults to the same as window title.\r\n  -css <uri>             URI of the CSS file. This defaults to internal CSS.\r\n  -facesconfig <path>    Path to the faces-config.xml file.\r\n  -attr <path>           Path to properties file containing descriptions for\r\n                         implied attributes of composite components, such as\r\n                         'id', 'rendered', etc.\r\n  -f                     Hide 'Output generated by Vdldoc' footer.\r\n  -q                     Quiet Mode, i.e. disable logging.\r\ntaglib1 [taglib2 [taglib3 ...]]: Space separated paths to .taglib.xml files.\r\n    NOTE: if an argument or file path contains by itself spaces, quote it.\r\n------------------------------------------------------------------------------\r\n```\r\n\r\n## License\r\n\r\nVdldoc has BSD license, because the original TLDDoc was also BSD. Note\r\nthat we would personally like it to be Apache 2.0 license instead, but\r\nwe don't know how to relicense it without any potential law trouble. So\r\nwe decided to keep it BSD.","google":"UA-29559297-7","note":"Don't delete this file! It's used internally to help with page regeneration."}